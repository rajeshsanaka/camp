<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Login • YourApp</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <style>
      :root {
        --bg: #0b1020;
        --panel: #0f162f;
        --muted: #a3acc5;
        --text: #e8ecf8;
        --primary: #7c3aed;
        --primary-2: #06b6d4;
        --focus: #3b82f6;
        --danger: #f87171;
        --ring: 0 0 0 4px color-mix(in srgb, var(--focus) 25%, transparent);
      }

      * { box-sizing: border-box; }
      html, body { height: 100%; }
      body {
        margin: 0;
        font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, "Apple Color Emoji", "Segoe UI Emoji";
        color: var(--text);
        background: radial-gradient(1200px 600px at 10% 0%, #0d1328 0%, #090f1f 40%, #070b16 100%), var(--bg);
      }

      .page {
        min-height: 100dvh;
        display: grid;
        grid-template-columns: 1fr;
      }

      @media (min-width: 980px) {
        .page { grid-template-columns: 1.1fr 1fr; }
      }

      .artwork {
        position: relative;
        display: none;
        overflow: hidden;
        background: linear-gradient(135deg, #0c1030 0%, #0b1635 50%, #0b1a28 100%);
      }

      @media (min-width: 980px) { .artwork { display: block; } }

      .bg-shape {
        position: absolute;
        inset: -10% -10% -10% -10%;
        width: 120%; height: 120%;
      }

      .illustration {
        position: absolute;
        width: clamp(240px, 42%, 520px);
        bottom: 8vh;
        right: 8vh;
        opacity: 0.9;
      }

      .panel {
        display: grid;
        align-content: center;
        gap: 28px;
        padding: clamp(24px, 6vw, 56px);
      }

      .brand {
        display: inline-flex;
        gap: 10px;
        align-items: center;
        color: inherit;
        text-decoration: none;
        width: fit-content;
      }

      .brand-mark { width: 30px; height: 30px; }
      .brand-name { font-weight: 700; letter-spacing: 0.2px; }

      h1 { margin: 6px 0 0; font-size: clamp(26px, 3.4vw, 34px); }
      .subtitle { margin: 0; color: var(--muted); }

      form {
        margin-top: 6px;
        background: color-mix(in srgb, var(--panel) 92%, #ffffff 0%);
        border: 1px solid color-mix(in srgb, var(--panel) 80%, #ffffff 8%);
        border-radius: 14px;
        padding: clamp(18px, 4vw, 26px);
        display: grid;
        gap: 16px;
        box-shadow: 0 10px 40px rgba(0,0,0,0.35);
      }

      .field { display: grid; gap: 8px; }
      label { font-size: 14px; color: #cdd6f6; }

      .input-with-icon {
        display: grid;
        grid-template-columns: 36px 1fr 40px;
        align-items: center;
        gap: 6px;
        background: #0b1327;
        border: 1px solid #1a2447;
        border-radius: 12px;
        padding: 6px 6px 6px 8px;
      }

      .input-with-icon:focus-within { outline: none; box-shadow: var(--ring); border-color: #2a3b75; }

      .icon { width: 20px; height: 20px; color: #9ab1ff; opacity: 0.9; }
      .toggle { appearance: none; background: none; border: 0; padding: 6px; cursor: pointer; color: #a6b4e8; border-radius: 8px; }
      .toggle:hover { background: #0e1733; }

      input[type="email"], input[type="password"] {
        width: 100%;
        height: 42px;
        background: transparent;
        border: 0;
        color: var(--text);
        font-size: 15px;
        outline: none;
      }

      .row { display: flex; align-items: center; gap: 12px; }
      .between { justify-content: space-between; }
      .checkbox { display: inline-flex; align-items: center; gap: 10px; font-size: 14px; color: #cbd2f1; cursor: pointer; }
      .checkbox input { width: 16px; height: 16px; accent-color: var(--primary); }

      .link { color: #93c5fd; text-decoration: none; }
      .link:hover { text-decoration: underline; }

      .primary-btn {
        height: 46px;
        border-radius: 12px;
        border: 0;
        cursor: pointer;
        color: white;
        font-weight: 600;
        letter-spacing: 0.2px;
        background: linear-gradient(135deg, var(--primary), var(--primary-2));
        box-shadow: 0 8px 24px rgba(124,58,237,0.35);
      }
      .primary-btn:hover { filter: brightness(1.05); }
      .primary-btn:active { transform: translateY(1px); }

      .oauth-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        height: 46px;
        width: 100%;
        border-radius: 12px;
        border: 1px solid #33406c;
        background: #0b1327;
        color: #dbe5ff;
        cursor: pointer;
      }
      .oauth-btn:hover { background: #0d1733; }
      .oauth-icon { width: 20px; height: 20px; }

      .divider { position: relative; text-align: center; color: #7f8bb6; font-size: 13px; }
      .divider::before, .divider::after {
        content: "";
        position: absolute;
        top: 50%;
        width: 40%;
        height: 1px;
        background: #1c274a;
      }
      .divider::before { left: 0; }
      .divider::after { right: 0; }
      .divider span { background: transparent; padding: 0 10px; }

      .error { color: var(--danger); font-size: 12px; min-height: 16px; margin: 0; }
      .fine-print { text-align: center; color: #9ba7d4; font-size: 14px; margin: 8px 0 0; }
    </style>
  </head>
  <body>
    <div class="page">
      <aside class="artwork" aria-hidden="true">
        <svg class="bg-shape" viewBox="0 0 1200 1200" xmlns="http://www.w3.org/2000/svg" role="img">
          <defs>
            <linearGradient id="grad" x1="0" x2="1" y1="0" y2="1">
              <stop offset="0%" stop-color="#7C3AED" />
              <stop offset="50%" stop-color="#3B82F6" />
              <stop offset="100%" stop-color="#06B6D4" />
            </linearGradient>
            <filter id="blur"><feGaussianBlur in="SourceGraphic" stdDeviation="60" /></filter>
          </defs>
          <g opacity="0.85" filter="url(#blur)">
            <circle cx="250" cy="260" r="220" fill="url(#grad)" />
            <circle cx="980" cy="180" r="180" fill="url(#grad)" />
            <circle cx="1080" cy="880" r="260" fill="url(#grad)" />
            <circle cx="380" cy="980" r="200" fill="url(#grad)" />
          </g>
          <g class="lines" stroke="rgba(255,255,255,0.25)" stroke-width="2" fill="none">
            <path d="M0,200 C300,120 420,180 700,160 C960,140 1080,60 1200,120" />
            <path d="M0,420 C220,360 480,420 740,380 C980,340 1110,280 1200,320" />
            <path d="M0,760 C240,720 520,800 780,760 C1020,720 1130,700 1200,720" />
          </g>
        </svg>

        <svg class="illustration" viewBox="0 0 320 320" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Abstract vector illustration">
          <defs>
            <linearGradient id="illuGrad" x1="0" x2="1" y1="0" y2="1">
              <stop offset="0%" stop-color="#ffffff" stop-opacity="0.9" />
              <stop offset="100%" stop-color="#ffffff" stop-opacity="0.6" />
            </linearGradient>
          </defs>
          <rect x="20" y="30" width="280" height="180" rx="14" fill="url(#illuGrad)" />
          <rect x="38" y="52" width="244" height="16" rx="8" fill="#ffffff" opacity="0.9" />
          <rect x="38" y="86" width="168" height="12" rx="6" fill="#ffffff" opacity="0.75" />
          <rect x="38" y="112" width="206" height="12" rx="6" fill="#ffffff" opacity="0.75" />
          <rect x="38" y="138" width="140" height="12" rx="6" fill="#ffffff" opacity="0.75" />
          <circle cx="270" cy="250" r="36" fill="#ffffff" opacity="0.9" />
          <path d="M264 250h12m-6 -6v12" stroke="#0ea5e9" stroke-width="3" stroke-linecap="round" />
        </svg>
      </aside>

      <main class="panel" aria-labelledby="loginHeading">
        <a class="brand" href="#" aria-label="YourApp home">
          <svg class="brand-mark" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false">
            <defs>
              <linearGradient id="brandGrad" x1="0" x2="1" y1="0" y2="1">
                <stop offset="0%" stop-color="#7C3AED" />
                <stop offset="100%" stop-color="#06B6D4" />
              </linearGradient>
            </defs>
            <rect x="2" y="2" width="28" height="28" rx="6" fill="url(#brandGrad)" />
            <path d="M10 17l4 4l8 -10" fill="none" stroke="#fff" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" />
          </svg>
          <span class="brand-name">YourApp</span>
        </a>

        <h1 id="loginHeading">Welcome back</h1>
        <p class="subtitle">Log in to your account</p>

        <form id="loginForm" novalidate>
          <div class="field">
            <label for="email">Email</label>
            <div class="input-with-icon">
              <svg class="icon" aria-hidden="true"><use href="#icon-mail" /></svg>
              <input type="email" id="email" name="email" placeholder="you@example.com" autocomplete="username" required />
              <span></span>
            </div>
            <p class="error" id="emailError" role="alert" aria-live="polite"></p>
          </div>

          <div class="field">
            <label for="password">Password</label>
            <div class="input-with-icon">
              <svg class="icon" aria-hidden="true"><use href="#icon-lock" /></svg>
              <input type="password" id="password" name="password" placeholder="••••••••" autocomplete="current-password" minlength="6" required />
              <button type="button" class="toggle" id="togglePassword" aria-label="Show password">
                <svg class="icon" aria-hidden="true"><use id="eyeUse" href="#icon-eye" /></svg>
              </button>
            </div>
            <p class="error" id="passwordError" role="alert" aria-live="polite"></p>
          </div>

          <div class="row between">
            <label class="checkbox">
              <input type="checkbox" id="remember" name="remember" />
              <span>Remember me</span>
            </label>
            <a class="link" href="#">Forgot password?</a>
          </div>

          <button type="submit" class="primary-btn">Log in</button>

          <div class="divider" role="separator" aria-label="or continue with">
            <span>or</span>
          </div>

          <button type="button" class="oauth-btn" aria-label="Continue with Google">
            <svg class="oauth-icon" viewBox="0 0 24 24" aria-hidden="true">
              <path fill="#EA4335" d="M12 10.2v3.9h5.5c-.2 1.2-1.7 3.6-5.5 3.6-3.3 0-6-2.8-6-6.2s2.7-6.2 6-6.2c1.9 0 3.1.8 3.8 1.5l2.6-2.5C16.8 2.9 14.6 2 12 2 6.9 2 2.8 6.1 2.8 11.2S6.9 20.4 12 20.4c6.9 0 9.6-4.8 9.6-7.2 0-.5-.1-.9-.2-1.3H12z" />
              <path fill="#34A853" d="M3.7 7.3l3.2 2.3C7.7 7.4 9.7 5.9 12 5.9c1.9 0 3.1.8 3.8 1.5l2.6-2.5C16.8 3 14.6 2 12 2 8.3 2 5.1 4.1 3.7 7.3z" />
              <path fill="#FBBC05" d="M12 20.4c2.6 0 4.9-.9 6.5-2.4l-3-2.5c-.8.5-1.8.8-3.5.8-3.8 0-5.3-2.4-5.5-3.6H1.9c-.1.4-.1.8-.1 1.3 0 2.1.8 3.8 2.3 5.1 1.5 1.3 3.6 2.1 5.9 2.1z" />
              <path fill="#4285F4" d="M21.6 13.2c.1-.4.2-.8.2-1.3 0-.5 0-1-.1-1.4H12v3.9h9.6z" />
            </svg>
            Continue with Google
          </button>

          <p class="fine-print">Don't have an account? <a class="link" href="#">Sign up</a></p>
        </form>

        <svg style="position:absolute;width:0;height:0;overflow:hidden" aria-hidden="true" focusable="false">
          <symbol id="icon-mail" viewBox="0 0 24 24">
            <path d="M4 6h16a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2zm0 2l8 5l8-5" stroke="currentColor" stroke-width="1.8" fill="none" stroke-linecap="round" stroke-linejoin="round" />
          </symbol>
          <symbol id="icon-lock" viewBox="0 0 24 24">
            <rect x="4" y="10" width="16" height="10" rx="2.5" stroke="currentColor" stroke-width="1.8" fill="none" />
            <path d="M8 10V8a4 4 0 1 1 8 0v2" stroke="currentColor" stroke-width="1.8" fill="none" stroke-linecap="round" />
          </symbol>
          <symbol id="icon-eye" viewBox="0 0 24 24">
            <path d="M2 12s4-7 10-7s10 7 10 7s-4 7-10 7S2 12 2 12z" stroke="currentColor" stroke-width="1.8" fill="none" />
            <circle cx="12" cy="12" r="3" fill="currentColor" />
          </symbol>
          <symbol id="icon-eye-off" viewBox="0 0 24 24">
            <path d="M2 2l20 20" stroke="currentColor" stroke-width="1.8" stroke-linecap="round" />
            <path d="M3 12s4-7 9-7c1.3 0 2.4.3 3.4.7M21 12s-4 7-9 7c-1.3 0-2.4-.3-3.4-.7" stroke="currentColor" stroke-width="1.8" fill="none" stroke-linecap="round" />
          </symbol>
        </svg>
      </main>
    </div>

    <script>
      const form = document.getElementById('loginForm');
      const emailInput = document.getElementById('email');
      const passwordInput = document.getElementById('password');
      const emailError = document.getElementById('emailError');
      const passwordError = document.getElementById('passwordError');
      const togglePassword = document.getElementById('togglePassword');
      const eyeUse = document.getElementById('eyeUse');

      function validateEmail(value) {
        return /\S+@\S+\.\S+/.test(value);
      }

      emailInput.addEventListener('input', () => {
        emailError.textContent = '';
      });
      passwordInput.addEventListener('input', () => {
        passwordError.textContent = '';
      });

      togglePassword.addEventListener('click', () => {
        const isHidden = passwordInput.type === 'password';
        passwordInput.type = isHidden ? 'text' : 'password';
        togglePassword.setAttribute('aria-label', isHidden ? 'Hide password' : 'Show password');
        eyeUse.setAttribute('href', isHidden ? '#icon-eye-off' : '#icon-eye');
      });

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        let hasError = false;

        if (!validateEmail(emailInput.value)) {
          emailError.textContent = 'Enter a valid email address';
          hasError = true;
        }
        if (!passwordInput.value || passwordInput.value.length < 6) {
          passwordError.textContent = 'Password must be at least 6 characters';
          hasError = true;
        }
        if (hasError) return;

        // Replace with your backend call if needed
        console.log('Logging in with:', {
          email: emailInput.value,
          password: '[hidden]',
          remember: document.getElementById('remember').checked,
        });

        // Demo success state
        const btn = form.querySelector('.primary-btn');
        const original = btn.textContent;
        btn.textContent = 'Signing in…';
        btn.disabled = true;
        await new Promise(r => setTimeout(r, 900));
        btn.textContent = 'Success!';
        btn.style.background = 'linear-gradient(135deg, #22c55e, #16a34a)';
        await new Promise(r => setTimeout(r, 700));
        btn.textContent = original;
        btn.disabled = false;
      });
    </script>
  </body>
  </html>


